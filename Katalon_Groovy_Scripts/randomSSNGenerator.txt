package com.kms.random

import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

import com.kms.katalon.core.annotation.Keyword
import com.kms.katalon.core.checkpoint.Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling
import com.kms.katalon.core.testcase.TestCase
import com.kms.katalon.core.testdata.TestData
import com.kms.katalon.core.testobject.TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Random;

import internal.GlobalVariable

public class Swedish_SSN {

	public static void main(String[] args) {

		System.out.println(createSSN());
		System.out.println(createSSNFiftheenYearOld());
	}

	@Keyword

	public static int createRandomIntBetween(int start, int end) {
		return start + (int) Math.round(Math.random() * (end - start));
	}

	@Keyword

	public static LocalDate createRandomDate(int startYear, int endYear) {
		int day = createRandomIntBetween(1, 28);
		int month = createRandomIntBetween(1, 12);
		int year = createRandomIntBetween(startYear, endYear);
		return LocalDate.of(year, month, day);
	}

	@Keyword

	public static String createSSN() {

		LocalDate d = createRandomDate(1950, 2000);
		System.out.println(d.format(DateTimeFormatter.ofPattern("yyyyMMdd")));


		int randomNum1 = createRandomIntBetween(0, 9);
		int randomNum2 = createRandomIntBetween(0, 9);
		String n1= Integer.toString(randomNum1);
		String n2 =Integer.toString(randomNum2);

		Random rand = new Random();
		//female
		//int num =rand.nextInt(5)*2;
		//male
		int num =rand.nextInt(5)*2 +1;

		String n3= Integer.toString(num);

		String date = d.format(DateTimeFormatter.ofPattern("yyyyMMdd"));
		String dateWithoutCentury = d.format(DateTimeFormatter.ofPattern("yyMMdd"));

		System.out.println(dateWithoutCentury);

		String ssn = "";

		ssn = dateWithoutCentury + n1 + n2 +n3;

		String c ="";

		for ( int n = 0; n <ssn.length(); n++)
		{

			c += ((((n + 1) % 2) + 1) *Integer.parseInt(ssn.substring(n, n+1)));

		}

		int checksum=0;
		for(int n=0; n< c.length(); n++)
		{

			checksum += Integer.parseInt(c.substring(n, n+1))*1;

		}

		checksum=(10-(checksum % 10)) % 10 ;
		ssn+=checksum;
		String t=date.substring(0,2);

		ssn=t+ssn.substring(0,6)+"-"+ssn.substring(6,10);

		return(ssn);

	}

	@Keyword

	public static createSSNFiftheenYearOld() {

		LocalDate d = createRandomDate(2004, 2004)
		System.out.println(d.format(DateTimeFormatter.ofPattern("yyyyMMdd")));

		int randomNum1 = createRandomIntBetween(0, 9);
		int randomNum2 = createRandomIntBetween(0, 9);
		String n1 = Integer.toString(randomNum1);
		String n2 = Integer.toString(randomNum2);

		Random rand = new Random()
		//female
		//int num = rand.nextInt(5)*2;
		//male
		int num = rand.nextInt(5)*2 +1;

		String n3 = Integer.toString(num);

		String date = d.format(DateTimeFormatter.ofPattern("yyyyMMdd"));
		String dateWithoutCentury = d.format(DateTimeFormatter.ofPattern("yyMMdd"));

		System.out.println(dateWithoutCentury);

		String ssn = "";

		ssn = dateWithoutCentury + n1 + n2 +n3;

		String c ="";

		for (int n = 0; n <ssn.length(); n++) {

			c += ((((n + 1) % 2) + 1) *Integer.parseInt(ssn.substring(n, n+1)));

		}

		int checksum=0;
		for(int n=0; n< c.length(); n++) {

			checksum += Integer.parseInt(c.substring(n, n+1))*1;

		}

		checksum=(10-(checksum % 10)) % 10 ;
		ssn+=checksum;
		String t=date.substring(0,2);

		ssn=t+ssn.substring(0,6)+"-"+ssn.substring(6,10);

		return(ssn);
	}

}



